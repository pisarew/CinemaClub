//
//  PhoneInputView.swift
//  CinemaClub
//
//  Created by –ì–ª–µ–± –ü–∏—Å–∞—Ä–µ–≤ on 06.06.2024.
//

import SwiftUI

struct PhoneInputView: View {
    @State private var viewModel = AuthViewModel()
    @State private var codeInputViewActive = false
    @State private var selectedCountryCode = "+7"
    @State private var phoneNumber = ""
    
    let countryCodes = [
        ("üá∑üá∫", "+7"),
        ("üá∞üáø", "+77"),
        ("üáßüáæ", "+375"),
        ("üá´üá∑", "+33"),
        ("üá™üá∏", "+34"),
        ("üáÆüáπ", "+39"),
        ("üáµüá±", "+48")
    ]
    
    var body: some View {
        NavigationStack {
            VStack(spacing: 20) {
                Spacer()
                
                Text("–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞")
                    .font(.system(size: 34, weight: .regular))
                
                Text("–ù–∞ –Ω–µ–≥–æ –ø—Ä–∏–¥–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –∫–æ–¥–æ–º –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
                    .font(.subheadline)
                    .foregroundColor(.gray.opacity(0.79))
                    .multilineTextAlignment(.center)
                    .padding(.horizontal)
                
                HStack {
                    Menu {
                        ForEach(countryCodes, id: \.1) { flag, code in
                            Button(action: {
                                selectedCountryCode = code
                            }) {
                                HStack {
                                    Text(flag)
                                    Text(code)
                                        .foregroundColor(.black)
                                }
                            }
                        }
                    } label: {
                        HStack {
                            let selectedFlag = countryCodes.first { $0.1 == selectedCountryCode }?.0 ?? "üá∑üá∫"
                            Text(selectedFlag)
                            Text(selectedCountryCode)
                                .foregroundColor(.black)
                        }
                        .padding()
                        .background(Color.gray.opacity(0.2))
                        .cornerRadius(5)
                    }
                    
                    TextField("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä", text: $phoneNumber)
                        .keyboardType(.phonePad)
                        .padding()
                        .background(Color.secondary.opacity(0.2))
                        .cornerRadius(5)
                }
                .padding(.horizontal)
                
                Button {
                    viewModel.user.phone = selectedCountryCode + phoneNumber
                    Task {
                        await viewModel.sendCode()
                    }
                } label: {
                    Text("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–¥")
                        .font(.system(size: 17, weight: .regular))
                        .foregroundColor(.white)
                        .padding()
                        .frame(maxWidth: .infinity)
                        .background(Color.red)
                        .cornerRadius(10)
                }
                .padding(.horizontal)
                
                Text("–ù–∞–∂–∏–º–∞—è ‚Äú–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–¥‚Äù –≤—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –æ –ü–æ–ª–∏—Ç–∏–∫–µ –ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏")
                    .font(.footnote)
                    .foregroundColor(.gray.opacity(0.79))
                    .multilineTextAlignment(.center)
                    .padding(.horizontal)
                    .lineLimit(nil)
                    .fixedSize(horizontal: false, vertical: true)
                    .overlay(
                        HStack {
                            Spacer()
                        }
                    )
                Spacer()
                
                VStack(spacing: 10) {
                    Button(action: {
                    }) {
                        HStack {
                            Image(systemName: "applelogo")
                                .foregroundColor(Color.red)
                            Text("–í–æ–π—Ç–∏ —Å Apple ID")
                                .font(.system(size: 17, weight: .regular))
                                .foregroundColor(Color.red)
                        }
                        .padding()
                        .frame(maxWidth: .infinity)
                        .background(Color.gray.opacity(0.2))
                        .cornerRadius(10)
                    }
                    .padding(.horizontal)
                    Button(action: {
                    }) {
                        HStack {
                            Image(systemName: "globe")
                                .foregroundColor(Color.red)
                            Text("–í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Google")
                                .font(.system(size: 17, weight: .regular))
                                .foregroundColor(Color.red)
                        }
                        .padding()
                        .frame(maxWidth: .infinity)
                        .background(Color.gray.opacity(0.2))
                        .cornerRadius(10)
                    }
                    .padding(.horizontal)
                }
                .padding(.bottom, 20)
            }
            .navigationDestination(isPresented: $codeInputViewActive) {
                CodeInputView(viewModel: viewModel)
            }
        }
    }
}

#Preview {
    PhoneInputView()
}
